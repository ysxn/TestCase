<resources>

    <string name="app_name">TestMediaProfile</string>

    <string name="local_service_started">Local service has started</string>
    <string name="local_service_stopped">Local service has stopped</string>
    <string name="local_service_label">Sample Local Service</string>
    <string name="activity_local_service_controller">App/Service/Local Service Controller</string>
    <string name="local_service_controller">This demonstrates how you can implement persistent services that
        may be started and stopped as desired.</string>
    <string name="start_service">Start Service</string>
    <string name="stop_service">Stop Service</string>
    <string name="activity_local_service_binding">App/Service/Local Service Binding</string>
    <string name="local_service_binding">This demonstrates how you can connect with a persistent
        service.  Notice how it automatically starts for you, and play around with the
        interaction between this and Local Service Controller.</string>
    <string name="bind_service">Bind Service</string>
    <string name="unbind_service">Unbind Service</string>
    <string name="local_service_connected">Connected to local service</string>
    <string name="local_service_disconnected">Disconnected from local service</string>
    <string name="activity_messenger_service_binding">App/Service/Messenger Service</string>
    <string name="messenger_service_binding">This demonstrates how you can communicate with
        a remote service using Messenger.</string>
    <string name="remote_service_started">Remote service has started</string>
    <string name="remote_service_stopped">Remote service has stopped</string>
    <string name="remote_service_label">Sample Remote Service</string>
    <string name="activity_remote_service_controller">App/Service/Remote Service Controller</string>
    <string name="remote_service_controller">This demonstrates how you can implement persistent services
        running in a separate process that may be started and stopped as desired.</string>
    <string name="activity_remote_service_binding">App/Service/Remote Service Binding</string>
    <string name="remote_service_binding">This demonstrates how you can connect with a persistent
        service running in another process.  Use the kill button to see what happens when
        the process crashes.</string>
    <string name="kill_process">Kill Process</string>
    <string name="remote_service_connected">Connected to remote service</string>
    <string name="remote_service_disconnected">Disconnected from remote service</string>
    <string name="remote_service_unbind_disconn">Unbinding due to disconnect</string>
    <string name="remote_call_failed">Failure calling remote service</string>
    <string name="activity_remote_service_binding_options">App/Service/Remote Service Binding Options</string>
    <string name="service_start_arguments_label">Sample Service Start Arguments
    </string>
    <string name="activity_service_start_arguments_controller">App/Service/Service
        Start Arguments Controller
    </string>
    <string name="service_start_arguments_controller">This demonstrates how
        service can be started with arguments, and run until all arguments are
        processed.
    </string>
    <string name="start1_service">Start \"One\" no redeliver</string>
    <string name="start2_service">Start \"Two\" no redeliver</string>
    <string name="start3_service">Start \"Three\" w/redeliver</string>
    <string name="startfail_service">Start failed delivery</string>
    <string name="service_created">Service created.</string>
    <string name="service_destroyed">Service destroyed.</string>
    <string name="foreground_service_started">Service is in the foreground</string>
    <string name="foreground_service_label">Sample Foreground Service</string>
    <string name="activity_foreground_service_controller">App/Service/Foreground Service Controller</string>
    <string name="foreground_service_controller">This demonstrates how you can
            implement services that run in the foreground when needed.</string>
    <string name="start_service_foreground">Start Service Foreground</string>
    <string name="start_service_background">Start Service Background</string>
    <string name="activity_isolated_service_controller">App/Service/Isolated Service Controller</string>
    <string name="isolated_service_controller">This demonstrates the use of android:isolatedProcess
            with services.  There are two services, which can be independently controlled; they will
            each run in their own isolated process</string>
    <string name="start_service_1">Start Service 1</string>
    <string name="stop_service_1">Stop Service 1</string>
    <string name="bind_service_1">Bind Service 1</string>
    <string name="start_service_2">Start Service 2</string>
    <string name="stop_service_2">Stop Service 2</string>
    <string name="bind_service_2">Bind Service 2</string>
    <string name="isolated_service_1_started">Isolated service 1 has started</string>
    <string name="isolated_service_1_stopped">Isolated service 1 has stopped</string>
    <string name="isolated_service_1_label">Sample Isolated Service 1</string>
    
    <string name="pick_up_statistic_title">Pick up Statistic</string>
    <string name="wave_hand_statistic_title">Wave Hand Statistic</string>
    <string name="trigger_correct">trigger correct</string>
    <string name="trigger_wrong">trigger wrong</string>
</resources>
